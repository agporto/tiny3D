# Build pure-Python wheels for Windows, macOS, and Linux and upload as artifacts.
# (No native extensions yet; adjust when adding compiled code.)

name: Build tiny3D Wheels (with native core)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build tiny3D wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build tooling
        run: |
          pip install --upgrade pip
          pip install build wheel
          pip install cmake ninja

      - name: Configure & build (C++)
        run: |
          cmake -S . -B build -DBUILD_PYTHON_MODULE=ON -GNinja -DCMAKE_BUILD_TYPE=Release
          cmake --build build --target pybind

      - name: Create python package (CMake python-package target)
        run: |
          cmake --build build --target python-package

      - name: Build wheel via pip-package target
        run: |
          cmake --build build --target pip-package
          mkdir -p wheelhouse
          cp build/lib/python_package/pip_package/*.whl wheelhouse/

      - name: Test wheel (import tiny3d)
        shell: bash
        run: |
          set -euo pipefail
          python -m venv venv
          if [ -f venv/Scripts/activate ]; then
            . venv/Scripts/activate
          else
            . venv/bin/activate
          fi
          python -m pip install --upgrade pip
          python -m pip install wheelhouse/tiny3d*-*.whl
          python -c "import tiny3d, sys, platform; print('tiny3d imported, version:', getattr(tiny3d,'__version__','unknown')); print('Python:', sys.version); print('Platform:', platform.platform()); print('Native bindings present:', getattr(tiny3d,'_HAVE_NATIVE', False)); import tiny3d.cpu.pybind as m; print('Loaded native module:', m)"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

# To publish to PyPI, uncomment and configure the following step:
#      - name: Publish to PyPI
#        uses: pypa/gh-action-pypi-publish@v1
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_API_TOKEN }}
