# Build cross-platform wheels for Windows, macOS, and Linux using cibuildwheel.
# Handles manylinux compatibility and cross-compilation automatically.

name: Build tiny3D Wheels (cross-platform)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2

      - name: Build wheels
        run: python -m cibuildwheel python --output-dir wheelhouse
        env:
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.8"
          CIBW_SKIP: "pp* *-musllinux*"  # Skip PyPy and musl builds
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_28"
          CIBW_BEFORE_BUILD_LINUX: >
            dnf install -y --nogpgcheck cmake ninja-build gcc-c++ python3-devel &&
            pip install cmake ninja &&
            rm -f /project/CMakeCache.txt /project/cmake_install.cmake
          CIBW_BEFORE_BUILD_WINDOWS: >
            pip install cmake ninja
          CIBW_BEFORE_BUILD_MACOS: >
            pip install cmake ninja
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD_FRONTEND: "build"

      - name: Test wheel install
        run: |
          python -m pip install --find-links wheelhouse tiny3d
          python -c "import tiny3d; print('tiny3d version:', tiny3d.__version__); print('Native support:', tiny3d._HAVE_NATIVE)"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

# To publish to PyPI, uncomment and configure the following step:
#      - name: Publish to PyPI
#        uses: pypa/gh-action-pypi-publish@v1
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_API_TOKEN }}
