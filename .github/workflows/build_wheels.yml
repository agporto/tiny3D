# This workflow builds Python wheels for Windows, macOS, and Linux using cibuildwheel
# and uploads them as artifacts. You can also configure it to upload to PyPI.

name: Build tiny3D Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build tiny3D wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install cibuildwheel
        run: pip install cibuildwheel

      - name: Build wheels
        run: |
          # Project packaging files live in the python/ subdirectory.
          # Invoke cibuildwheel with explicit project directory.
          mkdir -p wheelhouse
          cibuildwheel python --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp3?-*"
          CIBW_SKIP: "cp36-* cp37-*"
          # No native extensions yet; ensure pure wheels stay pure (auditwheel skipped automatically)
          CIBW_ENVIRONMENT: "PURE_PYTHON=1"

      - name: Test wheel (import tiny3d)
        run: |
          python -m venv venv
          source venv/bin/activate || . venv/Scripts/activate
          pip install --upgrade pip
          pip install wheelhouse/tiny3d*.whl
          python -c "import tiny3d, sys; print('tiny3d imported, version:', getattr(tiny3d, '__version__', 'unknown')); print('Python', sys.version)"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

# To publish to PyPI, uncomment and configure the following step:
#      - name: Publish to PyPI
#        uses: pypa/gh-action-pypi-publish@v1
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_API_TOKEN }}
