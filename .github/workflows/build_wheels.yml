# This workflow builds Python wheels for Windows, macOS, and Linux using cibuildwheel
# and uploads them as artifacts. You can also configure it to upload to PyPI.

name: Build tiny3D Wheels (pure Python)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build tiny3D wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build backend
        run: pip install --upgrade build

      - name: Build wheel
        run: |
          cd python
          python -m build --wheel --outdir ../wheelhouse

      - name: Test wheel (import tiny3d)
        shell: bash
        run: |
          set -euo pipefail
          python -m venv venv
          if [ -f venv/Scripts/activate ]; then
            . venv/Scripts/activate
          else
            . venv/bin/activate
          fi
            
          python -m pip install --upgrade pip
          python -m pip install wheelhouse/tiny3d*-py3-none-any.whl
          python - <<'EOF'
import tiny3d, sys, platform
print('tiny3d imported, version:', getattr(tiny3d, '__version__', 'unknown'))
print('Python:', sys.version)
print('Platform:', platform.platform())
print('Native bindings present:', getattr(tiny3d, '_HAVE_NATIVE', False))
EOF

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

# To publish to PyPI, uncomment and configure the following step:
#      - name: Publish to PyPI
#        uses: pypa/gh-action-pypi-publish@v1
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_API_TOKEN }}
